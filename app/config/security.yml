# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
# Basic tutorial: http://symfony.com/doc/current/reference/configuration/security.html
# how to load users from db: http://symfony.com/doc/current/security/entity_provider.html
# how to build a traditional login form: http://symfony.com/doc/current/security/form_login_setup.html

security:
    encoders:
        # for usin users from db
        AppBundle\Entity\User:
            algorithm: bcrypt
        # for in memory users
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    providers:
        our_db_provider:
            entity:
                class: AppBundle:User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer
        in_memory:
            memory:
                users:
                    ryan:
                        password: $2y$12$8UjNKOHDsmmFsYfS2D25c.TfS.fAw4VtWcgMOGo3v9Vq7zCHhRVSK
                        roles: 'ROLE_USER'
                    admin:
                        password: $2y$12$egDqQrhS9raVqb8R5Iizo.m5MMlNXqyLEk/CGFOrgYTcam82TldlG
                        roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            provider: in_memory
            # provider: our_db_provider
            anonymous: ~
            # http_basic: ~
            form_login:
                login_path: login
                check_path: login
            logout:
                path:   /logout
                target: /map


    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_ADMIN }